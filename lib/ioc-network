#!/bin/sh

__get_next_mac () {
    local mac_base="$(echo $1 | tr '[a-z]' '[A-Z]')"
    local mac_offset="$(echo "obase=16; $2" | bc)"
    mac_prefix="02ff60"
    calc_mac=$(echo "obase=16; ibase=16; $mac_base + $mac_offset" | bc)
    mac_postfix=$(echo $calc_mac | awk '{print substr($0, length($0)-5, length($0))}')
    mac="${mac_prefix}${mac_postfix}"
    echo $mac
}

__networking () {
    action="$1"
    local name="$2"
    local jid="$(jls -j ioc-$name jid)"
    local ip4="$(__get_jail_prop ip4_addr $name)"
    local ip6="$(__get_jail_prop ip6_addr $name)"
    local defaultgw="$(__get_jail_prop defaultrouter $name)"
    local defaultgw6="$(__get_jail_prop defaultrouter6 $name)"
    local nics="$(__get_jail_prop interfaces $name \
               |awk 'BEGIN { FS = "," } ; { print $1,$2,$3,$4 }')"
    local ip4_list="$(echo $ip4 | sed 's/,/ /g')"
    local ip6_list="$(echo $ip6 | sed 's/,/ /g')"
    local uuid="$(__get_jail_prop host_hostuuid $name)"
    local mac_base=$(echo $uuid | awk '{print substr($0, 0, 6)}')

    if [ $action == "start" ] ; then
        local mac_offset=0
        for i in $nics ; do
            local nic=$(echo $i | awk 'BEGIN { FS = ":" } ; { print $1 }')
            local bridge=$(echo $i | awk 'BEGIN { FS = ":" } ; { print $2 }')
            local memberif=$(ifconfig $bridge | grep member | head -n1 | cut -d' ' -f2)
            local brmtu=$(ifconfig $memberif | head -n1 |cut -d' ' -f6)
            epair_a=$(ifconfig epair create)
            epair_b=$(echo $epair_a | sed s/a\$/b/)
            mac_epair_a=$(__get_next_mac $mac_base $mac_offset)
            mac_epair_b=$(__get_next_mac $mac_base $mac_offset+1)
            ifconfig ${epair_a} name ${nic}:${jid} mtu $brmtu
            ifconfig ${nic}:${jid} link ${mac_epair_a}
            ifconfig ${nic}:${jid} description "associated with jail: $name"
            ifconfig $epair_b vnet ioc-${2}
            jexec ioc-${2} ifconfig $epair_b name $nic mtu $brmtu
            jexec ioc-${2} ifconfig ${nic} link ${mac_epair_b}
            ifconfig $bridge addm ${nic}:${jid} up
            ifconfig ${nic}:${jid} up
            let mac_offset=mac_offset + 2
        done

        if [ "$ip4" != "none" ] ; then
            for i in $ip4_list ; do
                iface="$(echo $i |awk 'BEGIN { FS = "|" } ; { print $1 }')"
                ip="$(echo $i |awk 'BEGIN { FS = "|" } ; { print $2 }')"
                jexec ioc-${2} ifconfig $iface $ip up
            done
        fi

        if [ "$ip6" != "none" ] ; then
            for i in $ip6_list ; do
                iface="$(echo $i |awk 'BEGIN { FS = "|" } ; { print $1 }')"
                ip="$(echo $i |awk 'BEGIN { FS = "|" } ; { print $2 }')"
                jexec ioc-${2} ifconfig $iface inet6 $ip up
            done
        fi

        if [ "$defaultgw" != "none" ] ; then
            jexec ioc-${2} route add default $defaultgw > /dev/null
        fi

        if [ "$defaultgw6" != "none" ] ; then
            jexec ioc-${2} route add -6 default "${defaultgw6}" >/dev/null
        fi

    elif [ $action == "stop" ] ; then
        for if in $nics ; do
            local nic="$(echo $if | cut -f 1 -d:)"
            ifconfig ${nic}:${jid} destroy
        done
    fi
}

__stop_legacy_networking () {
    local name="$1"

    local ip4_addr="$(__get_jail_prop ip4_addr $name)"
    local ip6_addr="$(__get_jail_prop ip6_addr $name)"

    if [ $ip4_addr != "none" ] ; then
        IFS=','
        for ip in $ip4_addr ; do
            local iface="$(echo $ip | \
                         awk 'BEGIN { FS = "|" } ; { print $1 }')"
            local ip4="$(echo $ip | \
                       awk 'BEGIN { FS = "|" } ; { print $2 }' | \
                       awk 'BEGIN { FS = "/" } ; { print $1 }')"

            ifconfig $iface $ip4 -alias
        done
    fi

    if [ $ip6_addr != "none" ] ; then
        IFS=','
        for ip6 in $ip6_addr ; do
            local iface="$(echo $ip6 | \
                         awk 'BEGIN { FS = "|" } ; { print $1 }')"
            local ip6="$(echo $ip6 | \
                       awk 'BEGIN { FS = "|" } ; { print $2 }' | \
                       awk 'BEGIN { FS = "/" } ; { print $1 }')"
            ifconfig $iface inet6 $ip6 -alias
        done
    fi
}

